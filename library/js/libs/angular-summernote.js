angular.module("summernote",[]).controller("SummernoteController",["$scope","$attrs","$timeout",function(r,u,s){"use strict";var c,d=angular.copy(r.summernoteConfig)||{};if(angular.isDefined(u.height)&&(d.height=+u.height),angular.isDefined(u.minHeight)&&(d.minHeight=+u.minHeight),angular.isDefined(u.maxHeight)&&(d.maxHeight=+u.maxHeight),angular.isDefined(u.placeholder)&&(d.placeholder=u.placeholder),angular.isDefined(u.focus)&&(d.focus=!0),angular.isDefined(u.airmode)&&(d.airMode=!0),angular.isDefined(u.lang)){if(!angular.isDefined($.summernote.lang[u.lang]))throw new Error('"'+u.lang+'" lang file must be exist.');d.lang=u.lang}d.callbacks=d.callbacks||{},angular.isDefined(u.onInit)&&(d.callbacks.onInit=function(e){r.init({evt:e})}),angular.isDefined(u.onEnter)&&(d.callbacks.onEnter=function(e){r.enter({evt:e})}),angular.isDefined(u.onFocus)&&(d.callbacks.onFocus=function(e){r.focus({evt:e})}),angular.isDefined(u.onPaste)&&(d.callbacks.onPaste=function(e){r.paste({evt:e})}),angular.isDefined(u.onKeyup)&&(d.callbacks.onKeyup=function(e){r.keyup({evt:e})}),angular.isDefined(u.onKeydown)&&(d.callbacks.onKeydown=function(e){r.keydown({evt:e})}),angular.isDefined(u.onImageUpload)&&(d.callbacks.onImageUpload=function(e){r.imageUpload({files:e,editable:r.editable})}),angular.isDefined(u.onMediaDelete)&&(d.callbacks.onMediaDelete=function(e){var n={attrs:{}};n.tagName=e[0].tagName,angular.forEach(e[0].attributes,function(e){n.attrs[e.name]=e.value}),r.mediaDelete({target:n})}),this.activate=function(e,n,a){var t=function(){var e=n.summernote("code");n.summernote("isEmpty")&&(e=""),a&&a.$viewValue!==e&&s(function(){a.$setViewValue(e)},0)},i=d.callbacks.onChange;d.callbacks.onChange=function(e){s(function(){n.summernote("isEmpty")&&(e=""),t()},0),angular.isDefined(u.onChange)?r.change({contents:e,editable:r.editable}):angular.isFunction(i)&&i.apply(this,arguments)},angular.isDefined(u.onBlur)&&(d.callbacks.onBlur=function(e){!d.airMode&&n.blur(),r.blur({evt:e})}),n.summernote(d);var o,l=n.next(".note-editor");l.find(".note-toolbar").click(function(){t(),l.hasClass("codeview")?(l.on("keyup",t),a&&(o=e.$watch(function(){return a.$modelValue},function(e){l.find(".note-codable").val(e)}))):(l.off("keyup",t),angular.isFunction(o)&&o())}),a&&(a.$render=function(){a.$viewValue?n.summernote("code",a.$viewValue):n.summernote("empty")}),angular.isDefined(u.editable)&&(r.editable=l.find(".note-editable")),angular.isDefined(u.editor)&&(r.editor=n),(c=n).on("$destroy",function(){n.summernote("destroy"),r.summernoteDestroyed=!0})},r.$on("$destroy",function(){r.summernoteDestroyed||c.summernote("destroy")})}]).directive("summernote",[function(){"use strict";return{restrict:"EA",transclude:"element",replace:!0,require:["summernote","?ngModel"],controller:"SummernoteController",scope:{summernoteConfig:"=config",editable:"=",editor:"=",init:"&onInit",enter:"&onEnter",focus:"&onFocus",blur:"&onBlur",paste:"&onPaste",keyup:"&onKeyup",keydown:"&onKeydown",change:"&onChange",imageUpload:"&onImageUpload",mediaDelete:"&onMediaDelete"},template:'<div class="summernote"></div>',link:function(n,a,e,t,i){var o=t[0],l=t[1];if(l)var r=n.$watch(function(){return l.$viewValue},function(e){r(),a.append(e),o.activate(n,a,l)},!0);else i(n,function(e,n){a.append(e.html())}),o.activate(n,a,l)}}}]);